" General {
" Changing Vim's idea of the terminal.
  if match($TERM, "screen")!=-1
    "set term=xterm-256color  " while running in GNU screen override TERM
  endif

  " I like to have a different background in GUI and terminal modes,
  " so I can use the following if-then.
  if has('gui_running')
      set background=light  " in GUI run with light background
  else
      set background=dark  "in Terminal use dark background
  endif

  " For GUI vim
  " Different cursor behavior for different vim modes.
  " This only works in gvim.
  set guicursor=n-v-c:block-Cursor-blinkon0,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver20-Cursor,r-cr:hor20-Cursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175
  " Gui font
  if has("gui_running")
      " colorscheme desert

      if has("gui_gtk2")
          "set guifont=Monospace\ 9
          set guifont=Inconsolata\ 12
      elseif has("gui_photon")
          set guifont=Courier\ New:s11
      elseif has("gui_kde")
          set guifont=Courier\ New/11/-1/5/50/0/0/0/1/0
      elseif has("x11")
          set guifont=-*-courier-medium-r-normal-*-*-100-*-*-m-*-*
      else
          set guifont=Courier_New:h11:cDEFAULT
      endif
  endif
" }

" Formatting {
  set autoindent  " copy indentation from previous line
  "set cindent  " do C program indenting
  "set smartindent=off  " has no effect if use cindent

  set softtabstop=4  " Use 2 space characters instead of tab character.
  set shiftwidth=4  " indent with 2 spaces, represents >> shift
  set expandtab  " put spaces instead of tab character
  set autoindent

  set textwidth=80  " maximum text width
  set wrap  " should automatically wrap text longer than 80 characters

  highlight OverLength ctermbg=red ctermfg=white guibg=#592929  " mark long
  match OverLength /\%80v.*/                                    " columns
" }

" Bundles {
  " UnBundle unnecessary Vundle bundles (plugins)
  " Remember to run ':BundleClean!' after this to remove the existing directories

  " PHP
    UnBundle  'spf13/PIV'
  " Java
    UnBundle 'derekwyatt/vim-scala'
    UnBundle 'derekwyatt/vim-sbt'
  " Ruby
    UnBundle 'tpope/vim-rails'
  " Source Control
    UnBundle 'tpope/vim-fugitive'
  " Check syntax
    UnBundle 'scrooloose/syntastic'
" }


" Customization {
  " This allows me to put a .vim.custom file in every directory to load commands
  " and options specific to that directory. If you're working on multiple
  " projects that have deep directory structures you might need something more
  " sophisticated (e.g. walk up the directory tree until a .vim.custom is
  " found), but the same basic idea will work.
  if filereadable(".vim.custom")
      so .vim.custom
  endif

  " Override default status line by disabling unnecessary fugitive part.
  if has('statusline')
      set laststatus=2

      " Broken down into easily includeable segments
      set statusline=%<%f\                     " Filename
      set statusline+=%w%h%m%r                 " Options
  "   set statusline+=%{fugitive#statusline()} " Git Hotness
      set statusline+=\ [%{&ff}/%Y]            " Filetype
      set statusline+=\ [%{getcwd()}]          " Current dir
      set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
  endif

  " General {
      " Ignore autocommand events set for BufEnter
      set eventignore+=BufEnter
  " }

  " Plugins {
    " NERDTree {
      let g:NERDTreeDirArrows=0  " Fix NERDTree problem with entering sub dirs
      let g:NERDTreeChDirMode=0  " Prevent NERDTree from changing the CWD
    " }
  " }
" }


" Keyboard mappings {
  if has('gui_running')
      " Re-generate ctags
      if match($HOST, "gdnw7mst35j") != -1
          noremap <C-F8> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
      else
          noremap <C-F8> :!/home/lukzachu/local/$ARCH/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
      endif
  else
      " Re-generate ctags
      if match($HOST, "gdnw7mst35j") != -1
          noremap [19~ :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
      else
          noremap [19~ :!/home/lukzachu/local/$ARCH/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
      endif

  endif

  nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>  " Press Space to turn
                                                       " off highlighting and
                                                       " clear any message
                                                       " already displayed.
  " }
